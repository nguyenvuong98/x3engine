version: '3'
services:
  x3ngine-api:
    build: .
    env_file:
      - .env
    volumes:
      # - .:/usr/src/app  # Mount local source code to the container (for development)
      - '/usr/src/app/node_modules'
      - jenkins-data:/usr/src/test-app
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
    networks:
      - x3ngine-network
  nginx-x3ngine-api:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Mount the Nginx config
    ports:
      - "8000:8000"  # Expose port 80 for the Nginx reverse proxy
    depends_on:
      - x3ngine-api  # Ensure Nginx starts after the Node.js app
    networks:
      - x3ngine-network
  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker
    privileged: true
    networks:
      x3ngine-network:
        aliases:
          - docker
    environment:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    ports:
      - "2376:2376"
    restart: unless-stopped
  jenkins-blueocean:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins-blueocean
    user: root
    restart: on-failure
    networks:
      - x3ngine-network
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: 1
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
      - "50000:50000"
volumes:
  jenkins-docker-certs:
  jenkins-data:
  app-data:
networks:
  x3ngine-network:
    driver: bridge